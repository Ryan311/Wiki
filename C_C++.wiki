%toc

==  Summary ==
*   C99标准定义的确定空间大小的类型: uint8_t, uint32_t
*   [[Calling Convention]]
*   [[字符_字符串]]
*   [[c运行库_C标准库_windowsAPI]]
*   [[C++ STL]]
*   [[Visual C++中C_C++格式化输出]]
*   [[const]]
*   [[sscanf函数和正则表达式]]
*   [[C++多态]]
*   类的访问权限
*   #define
{{{
    #define A(x) T_##x      连接
    #define B（x) #@x       转换
    #define C（x) #x        转换
    
    我们假设：x=1，则有：
    A(1)------〉T_1
    B(1)------〉'1'
    C(1)------〉"1"
}}}
*   [[C++Standard]]

==  GNU C  ==
*   Extensions to the C Language Family   http://gcc.gnu.org/onlinedocs/gcc/C-Extensions.html
*   GNU C provides several language features not found in ISO standard C 
*   Linux内核使用的GNU C扩展:
    *   语句表达式 
    *   typeof
    *   零长度数组
    *   可变参数宏
    *   标号元素
    *   Case 范围
    *   声明的特殊属性
    *   当前函数名
    *   内建函数

==  Bugs ==
*   单目运算符的优先级很高， 且结合方向是自右向左， 
    {{{
        char p[10] = "1234567890";
        int *a = (int *)p++;
        int *b = (int *)p++;
        
        执行完后， p是指向p[3]的，因为p++先执行， 然后才会强制转换
        要实现p向后移4 byte， 需要先将p强制转换成int *的
        ((int *)p)++;           这个是语法错误
        int *p1 = (int *)p;     这样OK
    }}}



