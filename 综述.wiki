%toc

==  低功耗蓝牙体系结构 ==
{{{
应用层  |          各种应用程序
-----------------------------------------
        |   通用访问规范    通用属性规范

主机    |   属性协议        安全管理器

        |   逻辑链路控制与适配协议

----------- 主机控制器接口 HCI ----------

        |           链路层
控制器
        |   物理层          直接测试模式
}}}

*   物理层
    *   采用高斯频移键控（GFSK）的调制方式改变无线电波的频率， 传输0或1的信息
    *   2.4GHz频段被划分为40个RF信道， 各信道宽度为2MHz。物理层每1us传输1比特应用数据
*   直接测试模式
    *   允许测试者让控制器的物理层发送一系列测试数据包或接收一系列数据包
    *   是测试物理层的新方法， 减少产品制造商的成本， 因为不同的公司不用再采用不同的方式来测试物理层。
*   链路层
    *   最复杂的部分， 它负责广播、扫描、建立和维护连接， 以及确保数据包按照正确的方式组织、正确地计算校验值以及加密序列
    *   有三个基本概念：    信道、报文、过程
{{{
    广播信道与数据信道上传输的都是小数据包， 格式均相同：
    
    bit     8       32          8       8       0 - 296     24
            前导    接入地址    报头    长度    数据        CRC
        
    
    前导：      优化数据包的鲁棒性， 这一长度足够接收者同步比特计时和设置自动增益控制
    接入地址：  广播信道是固定的， 数据信道中是完全随机的私有值
    报头：      描述数据包的内容
    长度：      描述载荷长度， 不允许发长度超过37的包
    数据：      变长的
    CRC：       循环冗余校验
}}}
*   主机控制器接口(HCI)
    *   为主机提供与控制器通信的标准接口。 
    *   分为逻辑接口和物理接口， 逻辑接口定义了命令和事件及相关行为， 物理接口是transport layer。
    *   位于主机和控制器内， 主机中的称为上层部分， 控制器中的称为下层部分
*   逻辑链路控制与适配协议(L2CAP)   复用层
    *   l2cap信道、l2cap信令
    *   低功耗蓝牙只使用了l2cap的很少部分， 其它都有是经典蓝牙在用
    *   低功耗蓝牙只使用固定信道， 一个用于信令信道， 一个用于安全管理器， 还有一个用于属性协议。
    *   只使用一种帧格式， 即B帧
    {{{ L2cap B 帧报文
        byte    2       2           0 - 65535
                长度    信道ID      信息净荷
    }}}
*   安全管理器协议(SMP)
    *   定义了一个配对和密钥分发协议
*   属性协议(ATT)
    *   属性协议定义了访问对端设备上的数据的一组规则， 数据存储在属性服务器的“属性”里， 客户端将请求发送到服务器， 后者回应响应消息。
    *   定义了六种类型的信息：
        #   从客户端发送至服务器的请求      write request， read request, ... [] reqeust
        #   从服务器发送至客户端的回复请求的响应    write response, read reqeust, ... [] response
        #   从客户端发送至服务器的无需响应的命令    write command, signed write command
        #   从服务器发送至客户端的无需确认的通知    notification
        #   从服务器发送至客户端的指示              indication
        #   从客户端发送至服务器的回复指示的确认    confirmation for indication 
    *   属性协议本身是无状态的
    *   属性协议定义了一些属性的权限， 客户端无法显示获得， 只能隐式的通过发送请求并从接收错误的尝试获得不能完成请求的原因
*   通用属性协议(GATT)
    *   在ATT之上， 定义了属性的类型及其使用方法
    *   引入概念：特性、服务、服务之间的包含关系、特性描述符等
    *   定义一些规则用来发现服务、特性、服务之间的关系， 以及用来读取和写入特性值
*   通用访问规范(GAP)
    *   通用访问规范定义了设备如何发现、连接， 以及为用户提供有用的信息
    *   还定义了设备之间如何建立长久的关系， 称为绑定(bonding)
*   应用层(APP)
    *   (APP Spec)应用层规约定义了三种类型：特性(characteristic)、服务(service)、规范(profile)
    *   特性：  采用已经格式、以通用唯一识别码(UUID)作为标记的一小块数据， 要求能够重复使用， 没有涉及行为
    *   服务：  是人类可读的一组特性及其相关的行为规范。服务只定义了位于服务器上的相关特性的行为， 而不定义客户端的行为
    *   规范：  是用例或应用的最终体现。 描述了如何发现并连接设备， 从而为每台设备确定所需的拓扑结构， 还描述了客户端的行为， 用于发现服务和服务特性， 以及使用该服务实现用例或应用所要求的功能。

== 新的使用模型 ==
*   存在检测            室内定位， 手机scan到beacon的广播信息， 判断自己的位置。
*   广播数据            ibeacon， 广播中包含少量信息， 传输数据用于连接建立、公告、广播信息。
*   无连接模式          只在需要时建立连接， 快速交互后断开， 设备无需保存连接状态。 如通知设备的电量的应用。
*   网关                ？？？低功耗蓝牙网关， 使用设备可以连接到互联网且使用尽可能少的能量实现。


