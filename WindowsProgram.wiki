%toc

= Basic =
*   CWnd与HWND的区别与转换
    {{{
        一、区别
            HWND是句柄，CWnd是MFC窗体类,CWnd中包含HWND句柄成员对象是m_hWnd.
            HWND是Windows系统中对所有窗口的一种标识，即窗口句柄。这是一个SDK概念。  
            CWnd是MFC类库中所有窗口类的基类。微软在MFC中将所有窗口的通用操作都封装到了这个类中，如：ShowWindow等等，同时它也封装了窗口句柄即m_hWnd成员。

        二、如何得到窗口对象指针CWnd * pCWnd
            1,在窗体里，直接用 this->，//this就是本窗体的窗口对象指针
            2,主窗体的类对象指针：AfxGetApp()->m_pMainWnd->,  //AfxGetApp()->m_pMainWnd就是主窗体的窗口对象指针
            3,pCWnd=GetDlgItem(ID_EDIT_NAME);//GetDlgItem 函数可以得到某个控件的窗口对象指针
    }}}
*   句柄和ID
    {{{
        句柄是窗口资源的标识，它标识资源在系统中所占用的内存块，应用程序通过窗口句柄对窗口进行操作。
        窗口ID是窗口在应用程序中的唯一标识，通过窗口ID可以获取窗口句柄。
    }}}

= topic =
== [[http://blogs.msdn.com/b/iliast/archive/2007/10/06/driver-driver-and-driver-application-communication.aspx|Driver-Driver and Driver-Application Communication]] ==
== [[Windows Driver]] ==
== [[Windows API]] ==
== [[Windows Service]] ==
== [[Windows Hook]] ==
== [[Tool help Library]] ==
== Samples ==
*   监视进程的创建并获得其启动时的命令行参数， 共有三种方法：
    *   通过CreateRemoteThread得到cmd line  [[CommandLine.cpp]]
        *   具体实现步骤：
            1、通过 GetProcAddress 取得 GetCommandLineA(kernel32.dll) 的地址。
            2、用 CreateRemoteThread 启动远程线程，使远程进程执行 GetCommandLineA 。
            3、用 WaitForSingleObject 等待远程线程结束。
            4、用 GetExitCodeThread 取得远程线程退出代码，其实就是远程进程中 GetCommandLineA 函数的返回值，这是远程进程命令行的首地址。
            5、通过 GetProcAddress 取得 lstrlenA 的地址。
            6、用 CreateRemoteThread 启动远程线程，使远程进程执行 lstrlenA 。
            7、用 WaitForSingleObject 等待远程线程结束。
            8、用 GetExitCodeThread 取得远程线程退出代码，其实就是远程进程中 lstrlenA 函数的返回值，这是远程进程命令行的文本长度。
            9、使用 ReadProcessMemory 把远程进程的命令行读取出来。
        
    *   通过NtQueryInformationProcess获得进程信息， 从而得到cmd line  [[NTProcessInfo.cpp]] [[NTProcessInfo.h]]
        *   http://www.codeproject.com/Articles/19685/Get-Process-Info-with-NtQueryInformationProcess 
        *   ntdll.dll中的NtQueryInformationProcess   未文档化的函数
        *   ReadProcessMemory
         
    *   在Driver中监测程序的创建和退出     [[ProcessMonitor.cpp]]
        *   利用PsSetCreateProcessNotifyRoutineEx注册回调函数， 当有进程创建或退出时会调用回调函数
        *   CreateProcessNotifyEx该回调函数的第三个参数PPS_CREATE_NOTIFY_INFO， 包含进程的相关信息， ID， CmdLine， ImageFileName等
        *   Driver必须要用/integryCheck进行Link， 且要签名， 否则PsSetCreateProcessNotifyRoutineEx注册失败
        *   Print格式控制
            *   %s, %ls 	NULL终止的ANSI字符串 	char*
            *   %S, %ws 	NULL终止的宽字符串 	    wchar_t*
            *   %Z 	        ANSI_STRING字符串 	    ANSI_STRING
            *   %wZ 	    UNICODE_STRING字符串 	UNICODE_STRING
    
    *   
