%toc

== IPython ==
*   http://ipython.org/install.html
*   [[NumPy]]
*   [[pandas]]
*   [[matplotlib]]
*   [[SciPy]]

=== Install ===
*   sudo pip install ipython2
*   sudo pip install ipython3
*   sudo apt-get install python-ipython     // install old version
*   出现"ImportError: No module named XXXX错误" 的错误时， 用sudo pip install XXXX来安装这个module就可以了
*   sudo pip install qtconsole  ==> ipython qtconsole
*   sudo pip install notebook   ==> ipython notebook

=== [[http://www.pythonforbeginners.com/basics/ipython-a-short-introduction/|IPython short introduction]] ===
*   Tab completion              " very useful
*   Using Python debugger
*   Profiles
*   QT-based
*   pylab模式:  enable matplotlib integration, 可显示matplotlib的绘图
    *   ipython --matplotlib   
    *   ipython --pylab
*   基于Qt的富GUI控制台
    *   ipython qtconsole --pylab=inline
*   ipython console
*   ipython notebook
 
== 快捷键 ==
*   CTRL+P或向上箭头键
*   CTRL+N或向下箭头键
*   CTRL+C      中止当前正在执行的代码
*   CTRL+A      将光标移动至行首
*   CTRL+E      将光标移动至行尾
*   CTRL+K      删除从光标开始至行尾的文本
*   CTRL+U      清除当前所有文本
*   CTRL+F      向前移动一个字符
*   CTRL+b      向后移动一个字符
*   CTRL+L      清屏

==  Useful Magic Command  ==
在IPython中，指令分为两种，以%开头的叫做line magic，这种类型的指令只能作用与一行代码。
<br>以%%开头的叫做cell magic，这种类型的指令可以作用于一个代码块, 如 %%time

*   %quickref   Ipython快速参考
*   %magic      显示所有魔术命令
*   %lsmagic    列出所有的指令列表
*   ?<name>     来查看具体某个指令的说明
*   %paste      执行剪贴板中的命令
*   %cpaste     打开一个特殊提示符以便手工粘贴待执行的Python代码
*   %who, %who_ls, %whos    显示interactive命名空间中定义的变量， 信息级别/冗余度可变
*   %xdel variable  删除variable
*   %reset      删除interactive命名空间中的全部变量/名称
*   %run        执行python脚本
*   %prun       执行Python语句并计算每个函数的执行时间, cProfile
*   %lprun      逐行分析函数性能, %lprun -f func1 -f func2 statement_to_profile
*   %mprun      
*   %pdb        启动调试器
*   %edit
    *   ?%edit  查看使用方法
    *   %edit -p | _    打开上次编辑的临时文件
    *   %edit _Number   打开之前编辑过的文件
*   %time       计算运行脚本或语句所用的时间
*   %timeit     运行多次， 计算平均运行时间 
    *   %timeit -n 100  []      指定运行次数
*   %memit      运行多次， 计算平均占用的内存
    *   %memit -r 3 []      指定运行次数
*   %prun       See how long it took each function in a script to run
*   %bookmark   保存常用目录的别名以便实现快速跳转
    *   %bookmark pdbook /home/persnail/WorkStation/Python2/pydata-book-master
    *   %bookmark -l
*   output = !cmd args  执行命令， 并将结果存放到变量output中
*   %pwd    返回当前目录
*   %pushd direction  将当前目录入栈
*   %popd   弹出栈顶目录
*   %dirs   返回一个含有当前目录栈的列表
*   %env    以dict形式返回当前系统环境变量
*   %dhist  返回目录访问历史
*   %pdoc <obj name>        查看对象的pydoc
*   %psource <obj name>     查看对象的源码，C扩展的话会有问题
*   %pdef <function name>   查看函数的声明
*   %pfile <obj name>       查看所在的源码文件
*   %logstart、%logoff      使用Log来记录会话

== IPython shortcuts for line_profiler and memory_profiler ==
*   http://www.huyng.com/posts/python-performance-analysis/
*   http://itindex.net/detail/50507-python-%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90
*   >sudo pip install line_profiler
*   >sudo pip install memory_profiler
*   %load_ext memory_profiler
*   %load_ext line_profiler
*   %mprun -f yourprogram func()
*   %lprun -f yourprogram func()

== [[http://yangzetian.github.io/2013/02/08/ipython-notebook-interactive-computing-new-era/|IPython-notebook]] ==
{{{
IPython Notebook 是一种新兴的交互式数据分析与记录工具，它定义了一种全新的计算文件格式，其中包含了代码，
代码说明以及每一步的计算输出(数值或图片等)，也就是说这一个文件完整记录了计算过程中的所有相关信息。此外，
该文件还可以嵌入网络视频，图片， 公式等众多副文本格式，实为交互计算，记录思维，传播思想的好帮手。
}}}
*   > sudo ipython notebook
*   > sudo ipython notebook --pylab
*   > sudo ipython notebook --pylab inline
*   As ipython notebook kernel must run as root while chrome can't run as root
*   modify /usr/bin/google-chrome, add *--user-data-dir* in the end of last line

==  Install line_profiler for ipython == 
*   pip install cython
*   pip install line_profiler
*   pip install memory_profiler
*   If error happened: "error: Unable to find vcvarsall.bat", follow this
    {{{
        1.  Install mingw32
        2.  Add mingw32's bin directory to your environment variables
            Append C:\Programs\MinGW\bin;C:\Programs\MinGW\msys\1.0\bin; to the PATH
        3.  Edit (create if it doesn't exist) the distutils.cfg file located at C:\Python26\Lib\distutils\distutils.cfg to be:
                [build]
                compiler=mingw32
    }}}
