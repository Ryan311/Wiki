%toc

= 内存区段 =
*   Linux内核把内存分为三个区段， 可用于DMA的内存， 常规内存以及高端内存， 在kmalloc分配内存时可由flags指定在哪块内存区分配
    *   通常的内存分配发生在常规内存区
    *   DMA内存指一段特别地址范围内的内存， 外设可利用这些内存执行DMA访问   __GFP_DMA
    *   高端内存是32位平台为了访问大量的内存而存在的一种机制                __GFP_HIGHMEM

= 后备高速缓存(lookaside cache) =
*   Linux内核的高速缓存管理有时称为"slab分配器"
*   scullc模块， 基于slab高速缓存的scull

= 内存池(mempool) =
*   存在原因： 内核中有些地方的内存分配不允许失败， 为了确保这些情况始终能成功分配， 先预留一些内存，在需要时使用
*   内存池是某种形式的后备高速缓存， 它试图始终保存空闲内存， 以便在紧急状态下使用   
*   mempool会分配一些内存块， 空闲且不会真正的使用， 很容易浪费大量内存， 所以驱动程序中最好不要使用
 
= 大块内存分配 =
*   面向页的分配技术
*   get_zeroed_page     返回指向新页面的指针并将页面清零
*   __get_free_page     同上但页面不清零
*   __get_free_pages    分配若干连续页面但不清零
*   free_page
*   free_pages 
*   scullp模块是使用整页的scull

= vmalloc及其辅助函数 =
*   vmalloc是Linux内存配对机制的基础， 它分配虚拟地址空间的连续区域， 尽管该区域物理上可能不是连续的
*   但大多数情况下不鼓励使用它， 因为获得的内存使用起来效率不高， 因为物理地址是不连续的
*   kmalloc和__get_free_pages虽然也是返回虚拟地址， 但它们使用的地址范围与物理内存是一一对应的
*   vmalloc和ioremap使用的地址范围完全是虚拟的， 每次分配都要通过对页表的适当设置来建立虚拟内存区域
*   scullv模块是使用虚拟内存的scull
