%toc
---------------------------------------------------------------------------
=== Linux Command ===
*   [[https://wiki.gnome.org/action/show/Apps/Nautilus?action=show&redirect=Nautilus|Nautilus]]: the file manager for GNOME desktop
    *   F9  打开/隐藏侧边栏
    *   Ctrl+L  在文件浏览器中呼出地址栏
    *   Ctrl+H  切换显示隐藏文件
    *   nautilus -q     Restart Nautilus
    *   nautilus-refresh    刷新
    {{{
    # gksu扩展允许在nautilus浏览文件时以管理员权限打开文件
    >   sudo apt-add-repository ppa:upubuntu-com/ppa
    >   sudo apt-get update
    >   sudo apt-get install nautilus-gksu
    >   nautilus -q
    
    >   sudo add-apt-repository ppa:dr3mro/nautilus-actions-extra
    >   sudo apt-get update
    >   sudo apt-get install nautilus-actions nautilus-actions-extra 
    }}}
    *   [[http://www.ibm.com/developerworks/cn/linux/l-script-linux-desktop-2/index.html?ca=drs/|扩展Nautilus]]
*   Ctrl+Alt+T  打开终端
*   ps -aux     list all user and system process(包括守护进程)
*   pstree      查看进程与线程的树形结构
*   ps -eLf     -L显示进程并显示线程ID和线程个数
*   top -H      实时显示各个线程情况
*   ipcalc      learn ip address
*   find <path> <condition> <action>
    *   find . -name 'my*'
    *   find . -name 'my*' -ls    在当前目录中搜索以ｍｙ开头的文件并显示详细信息
    *   find . -type [dfs] -mmin -10    搜索当前目录中，所有过去１０分钟中更新过的*[目录|普通|Socket]*文件。
    *   find . -size [+-]100M
    *   http://blog.jobbole.com/48856/
    *   find . -name "*.tmp" -exec rm {} \; 删除当前目录中的.tmp文件
*   locate      find　-name的另一种写法，但是要比后者快得多，原因在于它不搜索具体目录，而是搜索一个数据库（/var/lib/locatedb），这个数据库中含有本地所有文件信息。Linux系统自动创建这个数据库，并且每天自动更新一次，所以使用locate命令查不到最新变动过的文件。为了避免这种情况，可以在使用locate之前，先使用updatedb命令，手动更新数据库。
    *   locate /etc/sh  搜索etc目录下所有以sh开头的文件
    *   locate　～/m搜索用户目录下所有以m开头的文件
*   whereis     只能用于程序名的搜索，[-b|-m|-s]
*   which   在PATH变量指定的路径中搜索某个命令的位置，并返回第一个搜索结果
*   Ubuntu快捷键
    *   Super+W 在同一屏幕列出工作区所有窗口
    *   Super+S 俯瞰多个工作区
    *   Alt+Tab 切换不同程序
    *   Alt+`　　细化预览
    *   在文件浏览器中, CTRL+H可以切换显示隐藏文件夹和文件
*   Ubuntu下的文件关联
    *   /etc/gnome/defaults.list保存了全局的打开方式
    *   ~/.local/share/applications/mimeapps.list保存了个人的打开方式
    *   当两者不一致时,优先采用局部的个人设置
*   pbcopy/pbpaste(OS X command-line tool, work with standard input and clipboard)
    *   sudo apt-get install xsel
    *   modify .bashrc
    {{{
    #add this two lines
    alias pbcopy='xsel --clipboard --input'
    alias pbpaste='xsel --clipboard --output'
    
    #example
    $ cat test.txt | pbcopy
    }}}
*   dmesg   显示linux内核的环形缓冲区信息，我们可以从中获得诸如系统架构、cpu、挂载的硬件，RAM等多个运行级别的大量的系统信息。
    *   dmesg | [more|less|tail]        列出加载到内核中的所有驱动
    *   dmesg | grep sda                列出所有被检测到的硬件
    *   dmesg | head  -20               只输出dmesg命令的前20行日志
    *   dmesg | tail -20                只输出dmesg命令最后20行日志
    *   dmesg | grep -i usb             搜索包含特定字符串的被检测到的硬件
    *   dmesg -c                        清空dmesg缓冲区日志
    *   watch "dmesg | tail -20"        实时监控dmesg日志输出

---------------------------------------------------------------------------
=== Linux Should known ===
http://coolshell.cn/articles/8883.html

*   Bash
*   vim
*   ssh
*   bash作业管理
{{{
    &, Ctrl-Z, Ctrl-C, jobs, fg, bg, kill, 等等。当然，你也要知道Ctrl+\（SIGQUIT）和Ctrl+C （SIGINT）的区别
}}}
*   简单文件管理
{{{
ls 和 ls -l (你最好知道 “ls -l” 的每一列的意思), less, head, tail 和 tail -f, ln 和 ln -s (你知道明白hard link和soft link的不同和优缺点), chown, chmod, du (如果你想看看磁盘的大小 du -sk *), df, mount。当然，原作者忘了find命令。
}}}

*   [[http://coolshell.cn/articles/9104.html|Sed]]
*   [[http://coolshell.cn/articles/9070.html|Awk]]
*   [[http://os.51cto.com/art/201312/424212.htm|Shell技巧]]
