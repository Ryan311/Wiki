%toc
---------------------------------------------------------------------------
== Build OS ==
*   [[http://wiki.osdev.org/Main_Page|OSDEV]]
*   [[http://www.doudoulinux.org/web/english/index.html|DouDouLinux]]
 
== Linux Command ==
*   挂载局域网中的Windows共享盘
    *   sudo apt-get install cifs-utils
    *   mkdir /media/ShareDir
    *   sudo mount -t cifs -o username=hr, password="hr830311" //192.168.1.2/Backup /media/ShareDir
    *   username是Windows登录用户名， password是登录密码
    *   可将上面的命令写到启动文件中， 就像挂载本地Windows磁盘一样了
    *   当然也可以在文件浏览器中的网络中找到共享的设备并进入共享盘
*   安装文泉译字体
    *   sudo apt-get install ttf-wqy-microhei
    *   Chrome安装后字体会模糊， 在字体设置中选择wqy， 重启就OK了
*   Managing Java   安装多个java版时， 选择不同的版本
    *   sudo update-alternatives --config java
    *   有2个候选项可用于替换java(提供 /usr/bin/java)。
*   Ubuntu共享文件夹
    *   http://ubuntuhandbook.org/index.php/2014/05/ubuntu1404-file-sharing-samba/
*   ls
    *   ls -F   显示当前目录下的文件及目录， 目录后会加上/
    *   ls -F1  同上， 但是会每行显示一项
*   updatedb & locate
    *   updatedb    更新数据库命令， 配置文件/ect/updatedb.conf, 生成的数据库文件是/var/log/mlocate/mlocate.db
    *   locate      该命令用于查找文件, 它比find命令的搜索速度快, 它需要一个数据库, 这个数据库由每天的例行工作(crontab)程序运行updatedb来建立.
*   查找命令
    *   which      查看可执行文件的位置, 按$PATH路径搜索可执行文件
    *   whereis    在特定目录中($PATH和$MANPATH)查找符合条件的文件。这些文件的属性应属于原始代码(s)，二进制文件(b)，或是帮助文件(m)
    *   locate     功能同find -name， 配合数据库根据文件名查看文件位置  
    *   find       实际搜寻硬盘查询文件名称 
*   find
    {{{
    ·find   path   -option   [   -print ]   [ -exec   -ok   command ]   {} \;
    find命令的参数；

    pathname: find命令所查找的目录路径。例如用.来表示当前目录，用/来表示系统根目录。
    -print： find命令将匹配的文件输出到标准输出。
    -exec： find命令对匹配的文件执行该参数所给出的shell命令。相应命令的形式为'command' { } \;，注意{ }和\；之间的空格。
    -ok： 和-exec的作用相同，只不过以一种更为安全的模式来执行该参数所给出的shell命令，在执行每一个命令之前，都会给出提示，让用户来确定是否执行。

    #-print 将查找到的文件输出到标准输出
    #-exec   command   {} \;      —–将查到的文件执行command操作,{} 和 \;之间有空格
    #-ok 和-exec相同，只不过在操作前要询用户
    例：find . -name .svn | xargs rm -rf
    ====================================================
    -name   filename             #查找名为filename的文件
    -perm                        #按执行权限来查找
    -user   username             #按文件属主来查找
    -group  groupname            #按组来查找
    -mtime   -n +n               #按文件更改时间来查找文件，-n指n天以内，+n指n天以前
    -atime   -n +n               #按文件访问时间来查GIN: 0px">
    -ctime   -n +n               #按文件创建时间来查找文件，-n指n天以内，+n指n天以前
    -nogroup                     #查无有效属组的文件，即文件的属组在/etc/groups中不存在
    -nouser                      #查无有效属主的文件，即文件的属主在/etc/passwd中不存
    -newer   f1 !f2              找文件，-n指n天以内，+n指n天以前 
    -ctime    -n +n              #按文件创建时间来查找文件，-n指n天以内，+n指n天以前 
    -nogroup                     #查无有效属组的文件，即文件的属组在/etc/groups中不存在
    -nouser                      #查无有效属主的文件，即文件的属主在/etc/passwd中不存
    -newer   f1 !f2              #查更改时间比f1新但比f2旧的文件
    -type    b/d/c/p/l/f         #查是块设备、目录、字符设备、管道、符号链接、普通文件
    -size    n[c]                #查长度为n块[或n字节]的文件
    -depth                       #使查找在进入子目录前先行查找完本目录
    -fstype                      #查更改时间比f1新但比f2旧的文件
    -type    b/d/c/p/l/f         #查是块设备、目录、字符设备、管道、符号链接、普通文件
    -size      n[c]              #查长度为n块[或n字节]的文件
    -depth                       #使查找在进入子目录前先行查找完本目录
    -fstype                      #查位于某一类型文件系统中的文件，这些文件系统类型通常可 在/etc/fstab中找到
    -mount                       #查文件时不跨越文件系统mount点
    -follow                      #如果遇到符号链接文件，就跟踪链接所指的文件
    -cpio                %;      #查位于某一类型文件系统中的文件，这些文件系统类型通常可 在/etc/fstab中找到
    -mount                       #查文件时不跨越文件系统mount点
    -follow                      #如果遇到符号链接文件，就跟踪链接所指的文件
    -cpio                        #对匹配的文件使用cpio命令，将他们备份到磁带设备中
    -prune                       #忽略某个目录
    =====================================================
    $find   ~   -name   "*.txt"   -print        #在$HOME中查.txt文件并显示
    $find   .    -name   "*.txt"   -print
    $find   .    -name   "[A-Z]*"   -print      #查以大写字母开头的文件
    $find   /etc   -name   "host*"   -print     #查以host开头的文件
    $find   .   -name   "[a-z][a-z][0–9][0–9].txt"    -print   #查以两个小写字母和两个数字开头的txt文件
    $find .   -perm   755   -print
    $find   .   -perm -007   -exec ls -l {} \;   #查所有用户都可读写执行的文件同-perm 777
    $find   . -type d   -print
    $find   .   !   -type   d   -print 
    $find   .   -type l   -print
    $find   .   -size   +1000000c   -print        #查长度大于1Mb的文件
    $find   .   -size   100c         -print       # 查长度为100c的文件
    $find   .   -size   +10   -print              #查长度超过期作废10块的文件（1块=512字节）
    $cd /
    $find   etc   home   apps    -depth   -print   | cpio   -ivcdC65536   -o   /dev/rmt0
    $find   /etc -name "passwd*"   -exec grep   "cnscn"   {}   \;   #看是否存在cnscn用户
    $find . -name "yao*"   | xargs file
    $find   . -name "yao*"   |   xargs   echo    "" > /tmp/core.log
    $find   . -name "yao*"   | xargs   chmod   o-w
    ======================================================
    find   -name april*                     在当前目录下查找以april开始的文件
    find   -name   april*   fprint file        在当前目录下查找以april开始的文件，并把结果输出到file中
    find   -name ap* -o -name may*   查找以ap或may开头的文件
    find   /mnt   -name tom.txt   -ftype vfat   在/mnt下查找名称为tom.txt且文件系统类型为vfat的文件
    find   /mnt   -name t.txt ! -ftype vfat   在/mnt下查找名称为tom.txt且文件系统类型不为vfat的文件
    find   /tmp   -name wa* -type l            在/tmp下查找名为wa开头且类型为符号链接的文件
    find   /home   -mtime   -2                 在/home下查最近两天内改动过的文件
    find /home    -atime -1                  查1天之内被存取过的文件
    find /home   -mmin    +60                  在/home下查60分钟前改动过的文件
    find /home   -amin   +30                  查最近30分钟前被存取过的文件
    find /home   -newer   tmp.txt             在/home下查更新时间比tmp.txt近的文件或目录
    find /home   -anewer   tmp.txt            在/home下查存取时间比tmp.txt近的文件或目录
    find   /home   -used   -2                  列出文件或目录被改动过之后，在2日内被存取过的文件或目录
    find   /home   -user cnscn                列出/home目录内属于用户cnscn的文件或目录
    find   /home   -uid   +501                  列出/home目录内用户的识别码大于501的文件或目录
    find   /home   -group   cnscn              列出/home内组为cnscn的文件或目录
    find   /home   -gid 501                   列出/home内组id为501的文件或目录
    find   /home   -nouser                    列出/home内不属于本地用户的文件或目录
    find   /home   -nogroup                   列出/home内不属于本地组的文件或目录
    find   /home    -name tmp.txt    -maxdepth   4   列出/home内的tmp.txt 查时深度最多为3层
    find   /home   -name tmp.txt   -mindepth   3   从第2层开始查
    find   /home   -empty                     查找大小为0的文件或空目录
    find   /home   -size   +512k                查大于512k的文件
    find   /home   -size   -512k               查小于512k的文件
    find   /home   -links   +2                查硬连接数大于2的文件或目录
    find   /home   -perm   0700                查权限为700的文件或目录
    find   /tmp   -name tmp.txt   -exec cat {} \;
    find   /tmp   -name   tmp.txt   -ok   rm {} \;
    find    /   -amin    -10     # 查找在系统中最后10分钟访问的文件
    find    /   -atime   -2        # 查找在系统中最后48小时访问的文件
    find    /   -empty             # 查找在系统中为空的文件或者文件夹
    find    /   -group   cat        # 查找在系统中属于 groupcat的文件
    find    /   -mmin   -5         # 查找在系统中最后5分钟里修改过的文件
    find    /   -mtime   -1       #查找在系统中最后24小时里修改过的文件
    find    /   -nouser           #查找在系统中属于作废用户的文件
    find    /   -user    fred     #查找在系统中属于FRED这个用户的文件

    查当前目录下的所有普通文件
    # find . -type f -exec ls -l {} \; 
    -rw-r–r–    1 root      root         34928 2003-02-25   ./conf/httpd.conf 
    -rw-r–r–    1 root      root         12959 2003-02-25   ./conf/magic 
    -rw-r–r–    1 root      root          180 2003-02-25   ./conf.d/README 
    查当前目录下的所有普通文件，并在- e x e c选项中使用ls -l命令将它们列出
    =================================================
    在/ l o g s目录中查找更改时间在5日以前的文件并删除它们：
    $ find logs -type f -mtime +5 -exec   -ok   rm {} \;

    =================================================
    查询当天修改过的文件
    [root@book class]# find   ./   -mtime   -1   -type f   -exec   ls -l   {} \;

    =================================================
    查询文件并询问是否要显示
    [root@book class]# find   ./   -mtime   -1   -type f   -ok   ls -l   {} \;  
    < ls … ./classDB.inc.php > ? y
    -rw-r–r–    1 cnscn    cnscn       13709   1月 12 12:22 ./classDB.inc.php
    [root@book class]# find   ./   -mtime   -1   -type f   -ok   ls -l   {} \;  
    < ls … ./classDB.inc.php > ? n
    [root@book class]#

    =================================================
    查询并交给awk去处理
    [root@book class]# who   |   awk   ’{print $1"\t"$2}’
    cnscn    pts/0

    =================================================
    awk—grep—sed

    [root@book class]# df   -k |   awk ‘{print $1}’ |   grep   -v   ’none’ |   sed   s"/\/dev\///g"
    文件系统
    sda2
    sda1
    [root@book class]# df   -k |   awk ‘{print $1}’ |   grep   -v   ’none’
    文件系统
    /dev/sda2
    /dev/sda1

    1)在/tmp中查找所有的*.h，并在这些文件中查找“SYSCALL_VECTOR"，最后打印出所有包含"SYSCALL_VECTOR"的文件名
    A) find   /tmp   -name   "*.h"   | xargs   -n50   grep SYSCALL_VECTOR
    B) grep   SYSCALL_VECTOR   /tmp/*.h | cut    -d’:'   -f1| uniq > filename
    C) find   /tmp   -name "*.h"   -exec grep "SYSCALL_VECTOR"   {}   \; -print

    2)find / -name filename -exec rm -rf {} \;
        find / -name filename -ok rm -rf {} \;

    3)比如要查找磁盘中大于3M的文件：
    find . -size +3000k -exec ls -ld {} ;

    4)将find出来的东西拷到另一个地方
    find *.c -exec cp ‘{}’ /tmp ‘;’

    如果有特殊文件，可以用cpio，也可以用这样的语法：
    find dir -name filename -print | cpio -pdv newdir

    6)查找2004-11-30 16:36:37时更改过的文件
    # A=`find ./ -name "*php"` |   ls -l –full-time $A 2>/dev/null | grep "2004-11-30 16:36:37"
    }}}
*   Shutdown
    *   shutdown -r now     关机后重启
    *   shutdown -h now     关机后不重启
    *   shutdown -r +10     10分钟后重启
    *   shutdown -r 10:00   10点钟重启
    *   shutdown -h +10     10分钟后关机
    *   shutdown -h 10:00   10点钟关机
*   [[https://wiki.gnome.org/action/show/Apps/Nautilus?action=show&redirect=Nautilus|Nautilus]]: the file manager for GNOME desktop
    *   F9  打开/隐藏侧边栏
    *   Ctrl+L  在文件浏览器中呼出地址栏
    *   Ctrl+H  切换显示隐藏文件
    *   nautilus -q     Restart Nautilus
    *   nautilus-refresh    刷新
    {{{
    # gksu扩展允许在nautilus浏览文件时以管理员权限打开文件
    >   sudo apt-add-repository ppa:upubuntu-com/ppa
    >   sudo apt-get update
    >   sudo apt-get install nautilus-gksu
    >   nautilus -q
    
    >   sudo add-apt-repository ppa:dr3mro/nautilus-actions-extra
    >   sudo apt-get update
    >   sudo apt-get install nautilus-actions nautilus-actions-extra 
    }}}
    *   [[http://www.ibm.com/developerworks/cn/linux/l-script-linux-desktop-2/index.html?ca=drs/|扩展Nautilus]]
*   Linux查找所有正在运行的守护进程（daemon）
    *   守护进程（daemon）和后台进程（background process）有区别。守护进程是一种后台进程，但是，同时，它必须具备以下特性：
        #   没有控制它的tty
        #   必须是一个session leader
        #   必须是一个进程组的leader
        #   执行后台任务
        #   root目录即为工作目录
        #   umask设置为0
        #   文件描述符（file descriptor）都必须先关闭，然后再关联相应文件（或者设备），如果有需要的话。
    *   只用前两条做为判断条件即可
    *   > ps -eo ppid,pid,sid,stat,tty,comm  | awk '{ if ($2 == $3 && $5 == "?") {print $0}; }'
*   Ctrl+Alt+T  打开终端
*   ps -aux     list all user and system process(包括守护进程)
*   pstree      查看进程与线程的树形结构
*   ps -eLf     -L显示进程并显示线程ID和线程个数
*   top -H      实时显示各个线程情况
*   ipcalc      learn ip address
*   ctags
    *   sudo apt-get intall ctags
    *   ctags filename          给单个文件建立tags
    *   ctags -R                给当前目录及子目录下的所有文件建立tags
    *   http://blog.csdn.net/gangyanliang/article/details/6889860
*   Ubuntu快捷键
    *   Super+W 在同一屏幕列出工作区所有窗口
    *   Super+S 俯瞰多个工作区
    *   Alt+Tab 切换不同程序
    *   Alt+`　　细化预览
    *   在文件浏览器中, CTRL+H可以切换显示隐藏文件夹和文件
*   Ubuntu下的文件关联
    *   /etc/gnome/defaults.list保存了全局的打开方式
    *   ~/.local/share/applications/mimeapps.list保存了个人的打开方式
    *   当两者不一致时,优先采用局部的个人设置
*   pbcopy/pbpaste(OS X command-line tool, work with standard input and clipboard)
    *   sudo apt-get install xsel
    *   modify .bashrc
    {{{
    #add this two lines
    alias pbcopy='xsel --clipboard --input'
    alias pbpaste='xsel --clipboard --output'
    
    #example
    $ cat test.txt | pbcopy
    }}}
*   dmesg   显示linux内核的环形缓冲区信息，我们可以从中获得诸如系统架构、cpu、挂载的硬件，RAM等多个运行级别的大量的系统信息。
    *   dmesg | [more|less|tail]        列出加载到内核中的所有驱动
    *   dmesg | grep sda                列出所有被检测到的硬件
    *   dmesg | head  -20               只输出dmesg命令的前20行日志
    *   dmesg | tail -20                只输出dmesg命令最后20行日志
    *   dmesg | grep -i usb             搜索包含特定字符串的被检测到的硬件
    *   dmesg -c                        清空dmesg缓冲区日志
    *   watch "dmesg | tail -20"        实时监控dmesg日志输出
*   删除文件名中带空格的文件
    *   rm -rf "git github.wiki"
*   Ubuntu终端Terminal常用快捷键     
    *   Tab 自动补全
    *   Ctrl+a 光标移动到开始位置
    *   Ctrl+e 光标移动到最末尾
    *   Ctrl+k 删除此处至末尾的所有内容
    *   Ctrl+u 删除此处至开始的所有内容
    *   Ctrl+d 删除当前字符
    *   Ctrl+h 删除当前字符前一个字符
    *   Ctrl+w 删除此处到左边的单词
    *   Ctrl+y 粘贴由 Ctrl+u ， Ctrl+d ， Ctrl+w 删除的单词
    *   Ctrl+l 相当于clear，即清屏
    *   Ctrl+r 查找历史命令
    *   Ctrl+b 向回移动光标
    *   Ctrl+f 向前移动光标
    *   Ctrl+t 将光标位置的字符和前一个字符进行位置交换
    *   Ctrl+& 恢复 ctrl+h 或者 ctrl+d 或者 ctrl+w 删除的内容
    *   Ctrl+S 暂停屏幕输出
    *   Ctrl+Q 继续屏幕输出
    *   Ctrl+Left-Arrow 光标移动到上一个单词的词首
    *   Ctrl+Right-Arrow 光标移动到下一个单词的词尾
    *   Ctrl+p 向上显示缓存命令
    *   Ctrl+n 向下显示缓存命令
    *   Ctrl+d 关闭终端
    *   Ctrl+xx 在EOL和当前光标位置移动
    *   Ctrl+x@ 显示可能hostname补全
    *   Ctrl+c 终止进程/命令
    *   Shift +上或下 终端上下滚动
    *   Shift+PgUp/PgDn 终端上下翻页滚动
    *   Ctrl+Shift+n 新终端
    *   alt+F2 输入gnome-terminal打开终端
    *   Shift+Ctrl+T 打开新的标签页
    *   Shift+Ctrl+W 关闭标签页
    *   Shift+Ctrl+C 复制
    *   Shift+Ctrl+V 粘贴
    *   Alt+数字 切换至对应的标签页
    *   Shift+Ctrl+N 打开新的终端窗口
    *   Shift+Ctrl+Q 管壁终端窗口
    *   Shift+Ctrl+PgUp/PgDn 左移右移标签页
    *   Ctrl+PgUp/PgDn 切换标签页
    *   F1 打开帮助指南
    *   F10 激活菜单栏
    *   F11 全屏切换
    *   Alt+F 打开 “文件” 菜单（file）
    *   Alt+E 打开 “编辑” 菜单（edit）
    *   Alt+V 打开 “查看” 菜单（view）
    *   Alt+S 打开 “搜索” 菜单（search）
    *   Alt+T 打开 “终端” 菜单（terminal）
    *   Alt+H 打开 “帮助” 菜单（help） 

---------------------------------------------------------------------------
== Linux Should known ==
http://coolshell.cn/articles/8883.html
*   Bash
*   vim
*   ssh
*   bash作业管理
{{{
    &, Ctrl-Z, Ctrl-C, jobs, fg, bg, kill, 等等。当然，你也要知道Ctrl+\（SIGQUIT）和Ctrl+C （SIGINT）的区别
}}}
*   简单文件管理
{{{
ls 和 ls -l (你最好知道 “ls -l” 的每一列的意思), less, head, tail 和 tail -f, ln 和 ln -s (你知道明白hard link和soft link的不同和优缺点), chown, chmod, du (如果你想看看磁盘的大小 du -sk *), df, mount。当然，原作者忘了find命令。
}}}

*   [[http://coolshell.cn/articles/9104.html|Sed]]
*   [[http://coolshell.cn/articles/9070.html|Awk]]
*   [[http://os.51cto.com/art/201312/424212.htm|Shell技巧]]
*   var/log目录下的20个Linux日志文件功能详解
{{{
    /var/log/messages — 包括整体系统信息，其中也包含系统启动期间的日志。此外，mail，cron，daemon，kern和auth等内容也记录在var/log/messages日志中。
    /var/log/dmesg — 包含内核缓冲信息（kernel ring buffer）。在系统启动时，会在屏幕上显示许多与硬件有关的信息。可以用dmesg查看它们。
    /var/log/auth.log — 包含系统授权信息，包括用户登录和使用的权限机制等。
    /var/log/boot.log — 包含系统启动时的日志。
    /var/log/daemon.log — 包含各种系统后台守护进程日志信息。
    /var/log/dpkg.log – 包括安装或dpkg命令清除软件包的日志。
    /var/log/kern.log – 包含内核产生的日志，有助于在定制内核时解决问题。
    /var/log/lastlog — 记录所有用户的最近信息。这不是一个ASCII文件，因此需要用lastlog命令查看内容。
    /var/log/maillog /var/log/mail.log — 包含来着系统运行电子邮件服务器的日志信息。例如，sendmail日志信息就全部送到这个文件中。
    /var/log/user.log — 记录所有等级用户信息的日志。
    /var/log/Xorg.x.log — 来自X的日志信息。
    /var/log/alternatives.log – 更新替代信息都记录在这个文件中。
    /var/log/btmp – 记录所有失败登录信息。使用last命令可以查看btmp文件。例如，”last -f /var/log/btmp | more“。
    /var/log/cups — 涉及所有打印信息的日志。
    /var/log/anaconda.log — 在安装Linux时，所有安装信息都储存在这个文件中。
    /var/log/yum.log — 包含使用yum安装的软件包信息。
    /var/log/cron — 每当cron进程开始一个工作时，就会将相关信息记录在这个文件中。
    /var/log/secure — 包含验证和授权方面信息。例如，sshd会将所有信息记录（其中包括失败登录）在这里。
    /var/log/wtmp或/var/log/utmp — 包含登录信息。使用wtmp可以找出谁正在登陆进入系统，谁使用命令显示这个文件或信息等。
    /var/log/faillog – 包含用户登录失败信息。此外，错误登录命令也会记录在本文件中。
}}}
